// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ssl_simulation_robot_control.proto

package sim

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Full command for a single robot
type RobotCommand struct {
	// Id of the robot
	Id *uint32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	// Movement command
	MoveCommand *RobotMoveCommand `protobuf:"bytes,2,opt,name=move_command,json=moveCommand" json:"move_command,omitempty"`
	// Absolute (3 dimensional) kick speed [m/s]
	KickSpeed *float32 `protobuf:"fixed32,3,opt,name=kick_speed,json=kickSpeed" json:"kick_speed,omitempty"`
	// Kick angle [degree] (defaults to 45 degrees)
	KickAngle *float32 `protobuf:"fixed32,4,opt,name=kick_angle,json=kickAngle,def=45" json:"kick_angle,omitempty"`
	// Dribbler speed in rounds per minute [rpm]
	DribblerSpeed        *float32 `protobuf:"fixed32,5,opt,name=dribbler_speed,json=dribblerSpeed" json:"dribbler_speed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RobotCommand) Reset()         { *m = RobotCommand{} }
func (m *RobotCommand) String() string { return proto.CompactTextString(m) }
func (*RobotCommand) ProtoMessage()    {}
func (*RobotCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_915614bed9207b5a, []int{0}
}

func (m *RobotCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RobotCommand.Unmarshal(m, b)
}
func (m *RobotCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RobotCommand.Marshal(b, m, deterministic)
}
func (m *RobotCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RobotCommand.Merge(m, src)
}
func (m *RobotCommand) XXX_Size() int {
	return xxx_messageInfo_RobotCommand.Size(m)
}
func (m *RobotCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_RobotCommand.DiscardUnknown(m)
}

var xxx_messageInfo_RobotCommand proto.InternalMessageInfo

const Default_RobotCommand_KickAngle float32 = 45

func (m *RobotCommand) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *RobotCommand) GetMoveCommand() *RobotMoveCommand {
	if m != nil {
		return m.MoveCommand
	}
	return nil
}

func (m *RobotCommand) GetKickSpeed() float32 {
	if m != nil && m.KickSpeed != nil {
		return *m.KickSpeed
	}
	return 0
}

func (m *RobotCommand) GetKickAngle() float32 {
	if m != nil && m.KickAngle != nil {
		return *m.KickAngle
	}
	return Default_RobotCommand_KickAngle
}

func (m *RobotCommand) GetDribblerSpeed() float32 {
	if m != nil && m.DribblerSpeed != nil {
		return *m.DribblerSpeed
	}
	return 0
}

// Wrapper for different kinds of movement commands
type RobotMoveCommand struct {
	// Types that are valid to be assigned to Command:
	//	*RobotMoveCommand_WheelVelocity
	//	*RobotMoveCommand_LocalVelocity
	//	*RobotMoveCommand_GlobalVelocity
	Command              isRobotMoveCommand_Command `protobuf_oneof:"command"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *RobotMoveCommand) Reset()         { *m = RobotMoveCommand{} }
func (m *RobotMoveCommand) String() string { return proto.CompactTextString(m) }
func (*RobotMoveCommand) ProtoMessage()    {}
func (*RobotMoveCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_915614bed9207b5a, []int{1}
}

func (m *RobotMoveCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RobotMoveCommand.Unmarshal(m, b)
}
func (m *RobotMoveCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RobotMoveCommand.Marshal(b, m, deterministic)
}
func (m *RobotMoveCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RobotMoveCommand.Merge(m, src)
}
func (m *RobotMoveCommand) XXX_Size() int {
	return xxx_messageInfo_RobotMoveCommand.Size(m)
}
func (m *RobotMoveCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_RobotMoveCommand.DiscardUnknown(m)
}

var xxx_messageInfo_RobotMoveCommand proto.InternalMessageInfo

type isRobotMoveCommand_Command interface {
	isRobotMoveCommand_Command()
}

type RobotMoveCommand_WheelVelocity struct {
	WheelVelocity *MoveWheelVelocity `protobuf:"bytes,1,opt,name=wheel_velocity,json=wheelVelocity,oneof"`
}

type RobotMoveCommand_LocalVelocity struct {
	LocalVelocity *MoveLocalVelocity `protobuf:"bytes,2,opt,name=local_velocity,json=localVelocity,oneof"`
}

type RobotMoveCommand_GlobalVelocity struct {
	GlobalVelocity *MoveGlobalVelocity `protobuf:"bytes,3,opt,name=global_velocity,json=globalVelocity,oneof"`
}

func (*RobotMoveCommand_WheelVelocity) isRobotMoveCommand_Command() {}

func (*RobotMoveCommand_LocalVelocity) isRobotMoveCommand_Command() {}

func (*RobotMoveCommand_GlobalVelocity) isRobotMoveCommand_Command() {}

func (m *RobotMoveCommand) GetCommand() isRobotMoveCommand_Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *RobotMoveCommand) GetWheelVelocity() *MoveWheelVelocity {
	if x, ok := m.GetCommand().(*RobotMoveCommand_WheelVelocity); ok {
		return x.WheelVelocity
	}
	return nil
}

func (m *RobotMoveCommand) GetLocalVelocity() *MoveLocalVelocity {
	if x, ok := m.GetCommand().(*RobotMoveCommand_LocalVelocity); ok {
		return x.LocalVelocity
	}
	return nil
}

func (m *RobotMoveCommand) GetGlobalVelocity() *MoveGlobalVelocity {
	if x, ok := m.GetCommand().(*RobotMoveCommand_GlobalVelocity); ok {
		return x.GlobalVelocity
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RobotMoveCommand) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RobotMoveCommand_WheelVelocity)(nil),
		(*RobotMoveCommand_LocalVelocity)(nil),
		(*RobotMoveCommand_GlobalVelocity)(nil),
	}
}

// Move robot with wheel velocities
type MoveWheelVelocity struct {
	// Velocity [m/s] of front right wheel
	FrontRight *float32 `protobuf:"fixed32,1,req,name=front_right,json=frontRight" json:"front_right,omitempty"`
	// Velocity [m/s] of back right wheel
	BackRight *float32 `protobuf:"fixed32,2,req,name=back_right,json=backRight" json:"back_right,omitempty"`
	// Velocity [m/s] of back left wheel
	BackLeft *float32 `protobuf:"fixed32,3,req,name=back_left,json=backLeft" json:"back_left,omitempty"`
	// Velocity [m/s] of front left wheel
	FrontLeft            *float32 `protobuf:"fixed32,4,req,name=front_left,json=frontLeft" json:"front_left,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MoveWheelVelocity) Reset()         { *m = MoveWheelVelocity{} }
func (m *MoveWheelVelocity) String() string { return proto.CompactTextString(m) }
func (*MoveWheelVelocity) ProtoMessage()    {}
func (*MoveWheelVelocity) Descriptor() ([]byte, []int) {
	return fileDescriptor_915614bed9207b5a, []int{2}
}

func (m *MoveWheelVelocity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveWheelVelocity.Unmarshal(m, b)
}
func (m *MoveWheelVelocity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveWheelVelocity.Marshal(b, m, deterministic)
}
func (m *MoveWheelVelocity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveWheelVelocity.Merge(m, src)
}
func (m *MoveWheelVelocity) XXX_Size() int {
	return xxx_messageInfo_MoveWheelVelocity.Size(m)
}
func (m *MoveWheelVelocity) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveWheelVelocity.DiscardUnknown(m)
}

var xxx_messageInfo_MoveWheelVelocity proto.InternalMessageInfo

func (m *MoveWheelVelocity) GetFrontRight() float32 {
	if m != nil && m.FrontRight != nil {
		return *m.FrontRight
	}
	return 0
}

func (m *MoveWheelVelocity) GetBackRight() float32 {
	if m != nil && m.BackRight != nil {
		return *m.BackRight
	}
	return 0
}

func (m *MoveWheelVelocity) GetBackLeft() float32 {
	if m != nil && m.BackLeft != nil {
		return *m.BackLeft
	}
	return 0
}

func (m *MoveWheelVelocity) GetFrontLeft() float32 {
	if m != nil && m.FrontLeft != nil {
		return *m.FrontLeft
	}
	return 0
}

// Move robot with local velocity
type MoveLocalVelocity struct {
	// Velocity forward [m/s] (towards the dribbler)
	Forward *float32 `protobuf:"fixed32,1,req,name=forward" json:"forward,omitempty"`
	// Velocity to the left [m/s]
	Left *float32 `protobuf:"fixed32,2,req,name=left" json:"left,omitempty"`
	// Angular velocity counter-clockwise [rad/s]
	Angular              *float32 `protobuf:"fixed32,3,req,name=angular" json:"angular,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MoveLocalVelocity) Reset()         { *m = MoveLocalVelocity{} }
func (m *MoveLocalVelocity) String() string { return proto.CompactTextString(m) }
func (*MoveLocalVelocity) ProtoMessage()    {}
func (*MoveLocalVelocity) Descriptor() ([]byte, []int) {
	return fileDescriptor_915614bed9207b5a, []int{3}
}

func (m *MoveLocalVelocity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveLocalVelocity.Unmarshal(m, b)
}
func (m *MoveLocalVelocity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveLocalVelocity.Marshal(b, m, deterministic)
}
func (m *MoveLocalVelocity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveLocalVelocity.Merge(m, src)
}
func (m *MoveLocalVelocity) XXX_Size() int {
	return xxx_messageInfo_MoveLocalVelocity.Size(m)
}
func (m *MoveLocalVelocity) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveLocalVelocity.DiscardUnknown(m)
}

var xxx_messageInfo_MoveLocalVelocity proto.InternalMessageInfo

func (m *MoveLocalVelocity) GetForward() float32 {
	if m != nil && m.Forward != nil {
		return *m.Forward
	}
	return 0
}

func (m *MoveLocalVelocity) GetLeft() float32 {
	if m != nil && m.Left != nil {
		return *m.Left
	}
	return 0
}

func (m *MoveLocalVelocity) GetAngular() float32 {
	if m != nil && m.Angular != nil {
		return *m.Angular
	}
	return 0
}

// Move robot with global velocity
type MoveGlobalVelocity struct {
	// Velocity on x-axis of the field [m/s]
	VelX *float32 `protobuf:"fixed32,1,req,name=vel_x,json=velX" json:"vel_x,omitempty"`
	// Velocity on y-axis of the field [m/s]
	VelY *float32 `protobuf:"fixed32,2,req,name=vel_y,json=velY" json:"vel_y,omitempty"`
	// Angular velocity counter-clockwise [rad/s]
	VelAngular           *float32 `protobuf:"fixed32,3,req,name=vel_angular,json=velAngular" json:"vel_angular,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MoveGlobalVelocity) Reset()         { *m = MoveGlobalVelocity{} }
func (m *MoveGlobalVelocity) String() string { return proto.CompactTextString(m) }
func (*MoveGlobalVelocity) ProtoMessage()    {}
func (*MoveGlobalVelocity) Descriptor() ([]byte, []int) {
	return fileDescriptor_915614bed9207b5a, []int{4}
}

func (m *MoveGlobalVelocity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveGlobalVelocity.Unmarshal(m, b)
}
func (m *MoveGlobalVelocity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveGlobalVelocity.Marshal(b, m, deterministic)
}
func (m *MoveGlobalVelocity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveGlobalVelocity.Merge(m, src)
}
func (m *MoveGlobalVelocity) XXX_Size() int {
	return xxx_messageInfo_MoveGlobalVelocity.Size(m)
}
func (m *MoveGlobalVelocity) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveGlobalVelocity.DiscardUnknown(m)
}

var xxx_messageInfo_MoveGlobalVelocity proto.InternalMessageInfo

func (m *MoveGlobalVelocity) GetVelX() float32 {
	if m != nil && m.VelX != nil {
		return *m.VelX
	}
	return 0
}

func (m *MoveGlobalVelocity) GetVelY() float32 {
	if m != nil && m.VelY != nil {
		return *m.VelY
	}
	return 0
}

func (m *MoveGlobalVelocity) GetVelAngular() float32 {
	if m != nil && m.VelAngular != nil {
		return *m.VelAngular
	}
	return 0
}

// Command from the connected client to the simulator
type RobotControl struct {
	// Control the robots
	RobotCommands        []*RobotCommand `protobuf:"bytes,1,rep,name=robot_commands,json=robotCommands" json:"robot_commands,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RobotControl) Reset()         { *m = RobotControl{} }
func (m *RobotControl) String() string { return proto.CompactTextString(m) }
func (*RobotControl) ProtoMessage()    {}
func (*RobotControl) Descriptor() ([]byte, []int) {
	return fileDescriptor_915614bed9207b5a, []int{5}
}

func (m *RobotControl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RobotControl.Unmarshal(m, b)
}
func (m *RobotControl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RobotControl.Marshal(b, m, deterministic)
}
func (m *RobotControl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RobotControl.Merge(m, src)
}
func (m *RobotControl) XXX_Size() int {
	return xxx_messageInfo_RobotControl.Size(m)
}
func (m *RobotControl) XXX_DiscardUnknown() {
	xxx_messageInfo_RobotControl.DiscardUnknown(m)
}

var xxx_messageInfo_RobotControl proto.InternalMessageInfo

func (m *RobotControl) GetRobotCommands() []*RobotCommand {
	if m != nil {
		return m.RobotCommands
	}
	return nil
}

func init() {
	proto.RegisterType((*RobotCommand)(nil), "RobotCommand")
	proto.RegisterType((*RobotMoveCommand)(nil), "RobotMoveCommand")
	proto.RegisterType((*MoveWheelVelocity)(nil), "MoveWheelVelocity")
	proto.RegisterType((*MoveLocalVelocity)(nil), "MoveLocalVelocity")
	proto.RegisterType((*MoveGlobalVelocity)(nil), "MoveGlobalVelocity")
	proto.RegisterType((*RobotControl)(nil), "RobotControl")
}

func init() {
	proto.RegisterFile("ssl_simulation_robot_control.proto", fileDescriptor_915614bed9207b5a)
}

var fileDescriptor_915614bed9207b5a = []byte{
	// 494 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x93, 0xdf, 0x8a, 0xd3, 0x40,
	0x14, 0xc6, 0x4d, 0xda, 0x65, 0xed, 0xe9, 0x26, 0xba, 0xb3, 0x37, 0x01, 0x11, 0x6b, 0x40, 0xe8,
	0x4d, 0x53, 0x58, 0xaa, 0x88, 0x82, 0xb0, 0xbb, 0x82, 0x5e, 0xd4, 0x9b, 0x14, 0xfc, 0x7b, 0x31,
	0xe4, 0xcf, 0x34, 0x1d, 0x3a, 0xc9, 0x94, 0x49, 0x9a, 0xba, 0x4f, 0xe1, 0x13, 0xf9, 0x1c, 0xbe,
	0x8e, 0xcc, 0xc9, 0xc4, 0x9d, 0xba, 0x77, 0x3d, 0xbf, 0xef, 0x7c, 0x5f, 0x0e, 0xa7, 0x73, 0x20,
	0xac, 0x6b, 0x41, 0x6b, 0x5e, 0xee, 0x45, 0xd2, 0x70, 0x59, 0x51, 0x25, 0x53, 0xd9, 0xd0, 0x4c,
	0x56, 0x8d, 0x92, 0x22, 0xda, 0x29, 0xd9, 0xc8, 0xf0, 0xb7, 0x03, 0x67, 0xb1, 0xe6, 0x37, 0xb2,
	0x2c, 0x93, 0x2a, 0x27, 0x3e, 0xb8, 0x3c, 0x0f, 0x9c, 0x89, 0x3b, 0xf5, 0x62, 0x97, 0xe7, 0x64,
	0x01, 0x67, 0xa5, 0x6c, 0x19, 0xcd, 0x3a, 0x3d, 0x70, 0x27, 0xce, 0x74, 0x7c, 0x79, 0x1e, 0xa1,
	0xe9, 0x93, 0x6c, 0x99, 0x31, 0xc6, 0xe3, 0xf2, 0xae, 0x20, 0x4f, 0x01, 0xb6, 0x3c, 0xdb, 0xd2,
	0x7a, 0xc7, 0x58, 0x1e, 0x0c, 0x26, 0xce, 0xd4, 0x8d, 0x47, 0x9a, 0xac, 0x34, 0x20, 0xcf, 0x8d,
	0x9c, 0x54, 0x85, 0x60, 0xc1, 0x50, 0xcb, 0x6f, 0xdc, 0xc5, 0xcb, 0xae, 0xe5, 0x4a, 0x43, 0xf2,
	0x02, 0xfc, 0x5c, 0xf1, 0x34, 0x15, 0x4c, 0x99, 0x94, 0x13, 0x4c, 0xf1, 0x7a, 0x8a, 0x49, 0xe1,
	0x1f, 0x07, 0x1e, 0xff, 0x3f, 0x0a, 0x79, 0x0b, 0xfe, 0x61, 0xc3, 0x98, 0xa0, 0x2d, 0x13, 0x32,
	0xe3, 0xcd, 0x6d, 0xe0, 0xe0, 0xd4, 0x24, 0xd2, 0x5d, 0x5f, 0xb4, 0xf4, 0xd9, 0x28, 0x1f, 0x1f,
	0xc4, 0xde, 0xc1, 0x06, 0xda, 0x2c, 0x64, 0x96, 0x58, 0x66, 0xd7, 0x32, 0x2f, 0xb5, 0x64, 0x9b,
	0x85, 0x0d, 0xc8, 0x3b, 0x78, 0x54, 0x08, 0x99, 0xda, 0xee, 0x01, 0xba, 0x2f, 0xd0, 0xfd, 0x01,
	0x35, 0xcb, 0xee, 0x17, 0x47, 0xe4, 0x7a, 0x04, 0xa7, 0x66, 0xd1, 0xe1, 0x2f, 0x07, 0xce, 0xef,
	0x8d, 0x4b, 0x9e, 0xc1, 0x78, 0xad, 0x64, 0xd5, 0x50, 0xc5, 0x8b, 0x4d, 0x83, 0xff, 0x93, 0x1b,
	0x03, 0xa2, 0x58, 0x13, 0xbd, 0xf9, 0x34, 0xc9, 0xb6, 0x46, 0x77, 0x51, 0x1f, 0x69, 0xd2, 0xc9,
	0x4f, 0x00, 0x0b, 0x2a, 0xd8, 0xba, 0x09, 0x06, 0xa8, 0x3e, 0xd4, 0x60, 0xc9, 0xd6, 0xe8, 0xed,
	0xc2, 0x51, 0x1d, 0x76, 0x5e, 0x24, 0x5a, 0x0e, 0x7f, 0x74, 0x03, 0x1d, 0xad, 0x80, 0x04, 0x70,
	0xba, 0x96, 0xea, 0x90, 0xa8, 0xdc, 0x0c, 0xd3, 0x97, 0x84, 0xc0, 0x10, 0x73, 0xba, 0x19, 0xf0,
	0xb7, 0xee, 0x4e, 0xaa, 0x62, 0x2f, 0x12, 0x65, 0x3e, 0xde, 0x97, 0x21, 0x05, 0x72, 0x7f, 0x43,
	0xe4, 0x02, 0x4e, 0x5a, 0x26, 0xe8, 0x4f, 0x93, 0x3d, 0x6c, 0x99, 0xf8, 0xda, 0xc3, 0xdb, 0x3e,
	0xb9, 0x65, 0xe2, 0x9b, 0x5e, 0x8c, 0x86, 0xc7, 0xe9, 0xd0, 0x32, 0x71, 0x65, 0x3e, 0xf0, 0xfe,
	0xdf, 0x43, 0xc7, 0xf7, 0x4f, 0x16, 0xe0, 0xf7, 0x07, 0x81, 0x0b, 0xaf, 0x03, 0x67, 0x32, 0x98,
	0x8e, 0x2f, 0xbd, 0xc8, 0xbe, 0x87, 0xd8, 0x53, 0x56, 0x55, 0x5f, 0xbf, 0xfe, 0xfe, 0xaa, 0xe0,
	0xcd, 0x66, 0x9f, 0x46, 0x99, 0x2c, 0xe7, 0xba, 0xf3, 0x66, 0xbf, 0x9b, 0xad, 0x56, 0xcb, 0x79,
	0x5d, 0x8b, 0xd9, 0xdd, 0xb1, 0xcd, 0xf0, 0xbc, 0x32, 0x29, 0xe6, 0xbb, 0x6d, 0x31, 0xaf, 0x79,
	0xf9, 0x37, 0x00, 0x00, 0xff, 0xff, 0xbf, 0xda, 0xb5, 0xb6, 0x8e, 0x03, 0x00, 0x00,
}
