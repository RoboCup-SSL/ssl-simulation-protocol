// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ssl_simulation_robot_feedback.proto

package sim

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Feedback from a robot
type RobotFeedback struct {
	// Id of the robot
	Id *uint32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	// Has the dribbler contact to the ball right now
	DribblerBallContact *bool `protobuf:"varint,2,opt,name=dribbler_ball_contact,json=dribblerBallContact" json:"dribbler_ball_contact,omitempty"`
	// Custom robot feedback for specific simulators (the protobuf files are managed by the simulators)
	Custom               *any.Any `protobuf:"bytes,3,opt,name=custom" json:"custom,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RobotFeedback) Reset()         { *m = RobotFeedback{} }
func (m *RobotFeedback) String() string { return proto.CompactTextString(m) }
func (*RobotFeedback) ProtoMessage()    {}
func (*RobotFeedback) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccaad79fa350a03, []int{0}
}

func (m *RobotFeedback) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RobotFeedback.Unmarshal(m, b)
}
func (m *RobotFeedback) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RobotFeedback.Marshal(b, m, deterministic)
}
func (m *RobotFeedback) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RobotFeedback.Merge(m, src)
}
func (m *RobotFeedback) XXX_Size() int {
	return xxx_messageInfo_RobotFeedback.Size(m)
}
func (m *RobotFeedback) XXX_DiscardUnknown() {
	xxx_messageInfo_RobotFeedback.DiscardUnknown(m)
}

var xxx_messageInfo_RobotFeedback proto.InternalMessageInfo

func (m *RobotFeedback) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *RobotFeedback) GetDribblerBallContact() bool {
	if m != nil && m.DribblerBallContact != nil {
		return *m.DribblerBallContact
	}
	return false
}

func (m *RobotFeedback) GetCustom() *any.Any {
	if m != nil {
		return m.Custom
	}
	return nil
}

// Response to RobotControl from the simulator to the connected client
type RobotControlResponse struct {
	// List of errors, like using unsupported features
	Errors []*SimulatorError `protobuf:"bytes,1,rep,name=errors" json:"errors,omitempty"`
	// Feedback of the robots
	Feedback             []*RobotFeedback `protobuf:"bytes,2,rep,name=feedback" json:"feedback,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *RobotControlResponse) Reset()         { *m = RobotControlResponse{} }
func (m *RobotControlResponse) String() string { return proto.CompactTextString(m) }
func (*RobotControlResponse) ProtoMessage()    {}
func (*RobotControlResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccaad79fa350a03, []int{1}
}

func (m *RobotControlResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RobotControlResponse.Unmarshal(m, b)
}
func (m *RobotControlResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RobotControlResponse.Marshal(b, m, deterministic)
}
func (m *RobotControlResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RobotControlResponse.Merge(m, src)
}
func (m *RobotControlResponse) XXX_Size() int {
	return xxx_messageInfo_RobotControlResponse.Size(m)
}
func (m *RobotControlResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RobotControlResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RobotControlResponse proto.InternalMessageInfo

func (m *RobotControlResponse) GetErrors() []*SimulatorError {
	if m != nil {
		return m.Errors
	}
	return nil
}

func (m *RobotControlResponse) GetFeedback() []*RobotFeedback {
	if m != nil {
		return m.Feedback
	}
	return nil
}

func init() {
	proto.RegisterType((*RobotFeedback)(nil), "RobotFeedback")
	proto.RegisterType((*RobotControlResponse)(nil), "RobotControlResponse")
}

func init() {
	proto.RegisterFile("ssl_simulation_robot_feedback.proto", fileDescriptor_eccaad79fa350a03)
}

var fileDescriptor_eccaad79fa350a03 = []byte{
	// 282 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xcf, 0x4b, 0xc3, 0x30,
	0x14, 0xc7, 0x69, 0x07, 0x63, 0x64, 0x6c, 0x42, 0x9d, 0x50, 0x77, 0x2a, 0xf3, 0x60, 0x11, 0x9b,
	0x40, 0x0f, 0xe2, 0xd5, 0x0d, 0x3d, 0x79, 0x4a, 0x6f, 0x5e, 0x4a, 0x92, 0x66, 0x35, 0x34, 0xed,
	0x2b, 0x49, 0x7a, 0xd8, 0xd1, 0xff, 0x5c, 0xfa, 0x4b, 0xd1, 0x63, 0xf2, 0xf9, 0xbe, 0xc7, 0xe7,
	0xfb, 0xd0, 0x9d, 0xb5, 0x3a, 0xb7, 0xaa, 0xee, 0x34, 0x73, 0x0a, 0x9a, 0xdc, 0x00, 0x07, 0x97,
	0x9f, 0xa5, 0x2c, 0x38, 0x13, 0x15, 0x6e, 0x0d, 0x38, 0xd8, 0xef, 0xff, 0x85, 0xa4, 0x31, 0x60,
	0x26, 0x76, 0x5b, 0x02, 0x94, 0x5a, 0x92, 0xe1, 0xc5, 0xbb, 0x33, 0x61, 0xcd, 0x65, 0x44, 0x87,
	0x2f, 0x0f, 0x6d, 0x68, 0xbf, 0xef, 0x6d, 0x5a, 0x17, 0x6c, 0x91, 0xaf, 0x8a, 0xd0, 0x8b, 0xfc,
	0x78, 0x43, 0x7d, 0x55, 0x04, 0x29, 0xba, 0x29, 0x8c, 0xe2, 0x5c, 0x4b, 0x93, 0x73, 0xa6, 0x75,
	0x2e, 0xa0, 0x71, 0x4c, 0xb8, 0xd0, 0x8f, 0xbc, 0x78, 0x45, 0xaf, 0x67, 0x78, 0x64, 0x5a, 0x9f,
	0x46, 0x14, 0x3c, 0xa2, 0xa5, 0xe8, 0xac, 0x83, 0x3a, 0x5c, 0x44, 0x5e, 0xbc, 0x4e, 0x77, 0x78,
	0x34, 0xc0, 0xb3, 0x01, 0x7e, 0x69, 0x2e, 0x74, 0xca, 0x1c, 0x2a, 0xb4, 0x1b, 0x14, 0xfa, 0x69,
	0x03, 0x9a, 0x4a, 0xdb, 0x42, 0x63, 0x65, 0x70, 0x8f, 0x96, 0x43, 0x0b, 0x1b, 0x7a, 0xd1, 0x22,
	0x5e, 0xa7, 0x57, 0x38, 0x1b, 0xfb, 0x81, 0x79, 0xed, 0xff, 0xe9, 0x84, 0x83, 0x07, 0xb4, 0x9a,
	0xaf, 0x11, 0xfa, 0x43, 0x74, 0x8b, 0xff, 0x94, 0xa2, 0x3f, 0xfc, 0xf8, 0xfc, 0xf1, 0x54, 0x2a,
	0xf7, 0xd9, 0x71, 0x2c, 0xa0, 0x26, 0x7d, 0xea, 0xd4, 0xb5, 0x49, 0x96, 0xbd, 0x13, 0x6b, 0x75,
	0xf2, 0x7b, 0xc0, 0x64, 0x50, 0x15, 0xa0, 0x49, 0x5b, 0x95, 0xc4, 0xaa, 0xfa, 0x3b, 0x00, 0x00,
	0xff, 0xff, 0xd9, 0x5c, 0xe3, 0x67, 0x87, 0x01, 0x00, 0x00,
}
